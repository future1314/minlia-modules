<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minlia.module.article.mapper.ArticleMapper">

    <sql id="QUERY_CONTENT">
        SELECT
            t.id,
            t.category_id,
            t.title,
            t.content,
--             t.cover,
            at.url AS cover,
            t.keywords,
            t.attribute1,
            t.notes,
            t.enabled,
            t.create_by,
            t.create_date,
            t.last_modified_by,
            t.last_modified_date
        FROM
            mdl_article t
        LEFT JOIN mdl_attachment at ON at.relation_id = t.id AND at.belongs_to = 'ARTICLE_COVER'
	</sql>

    <sql id="QUERY_CONDITION">
        <where>
            <if test="categoryId != null">
                t.category_id = #{categoryId}
            </if>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="title != null">
                AND instr(t.title, #{title}) > 0
            </if>
            <if test="keywords != null">
                AND t.keywords = #{keywords}
            </if>
            <if test="enabled != null">
                AND t.enabled = #{enabled}
            </if>
            <if test="labelId != null">
                AND EXISTS (SELECT 1 FROM mdl_article_label_m m WHERE m.article_id=t.id AND m.label_id=#{labelId})
            </if>
        </where>
    </sql>

    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO mdl_article(
            category_id,
            title,
            content,
            cover,
            keywords,
            attribute1,
            notes,
            enabled,
            create_by
        ) VALUES (
            #{categoryId},
            #{title} ,
            #{content} ,
            #{cover} ,
            #{keywords} ,
            #{attribute1} ,
            #{notes} ,
            #{enabled} ,
            #{createBy}
        )
    </insert>

    <update id="update" parameterType="com.minlia.module.article.bean.domain.Article">
        UPDATE mdl_article
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="cover != null">
                cover = #{cover},
            </if>
            <if test="keywords != null">
                keywords = #{keywords} ,
            </if>
            <if test="attribute1 != null">
                attribute1 = #{attribute1} ,
            </if>
            <if test="notes != null">
                notes = #{notes} ,
            </if>
            <if test="enabled != null">
                enabled = #{enabled} ,
            </if>
            last_modified_by = #{lastModifiedBy,jdbcType=VARCHAR} ,
            last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP}
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="delete">
        DELETE FROM mdl_article WHERE id = #{id}
    </delete>

    <insert id="setLabels">
        DELETE FROM mdl_article_label_m where article_id = #{articleId};
        INSERT INTO mdl_article_label_m (
            article_id,
            label_id
        ) VALUES
        <foreach collection="labelIds" item="item" separator=",">
        (
            #{articleId},
            #{item}
        )
        </foreach>
    </insert>

    <select id="queryById" resultType="com.minlia.module.article.bean.domain.Article">
        <include refid="QUERY_CONTENT"/>
        WHERE t.id = #{id}
    </select>

    <select id="count" resultType="long">
        SELECT COUNT(1) FROM mdl_article t
        <include refid="QUERY_CONDITION"/>
    </select>

    <select id="one" resultType="com.minlia.module.article.bean.domain.Article">
        <include refid="QUERY_CONTENT"/>
        <include refid="QUERY_CONDITION"/>
    </select>

    <select id="list" resultType="com.minlia.module.article.bean.domain.Article">
        <include refid="QUERY_CONTENT"/>
        <include refid="QUERY_CONDITION"/>
        ORDER BY t.create_date DESC
    </select>

</mapper>