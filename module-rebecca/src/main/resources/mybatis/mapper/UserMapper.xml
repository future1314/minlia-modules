<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minlia.modules.rbac.backend.user.mapper.UserMapper">

    <sql id="QUERY_CONTENT">
        SELECT
            ut.id ,
            ut.guid ,
            ut.username ,
            ut.password ,
            ut.cellphone ,
            ut.email ,
            ut.default_role ,
            ut.credentials_expired ,
            ut.locked ,
            ut.lock_limit ,
            ut.lock_time ,
            ut.last_login_time ,
            ut.last_login_ip ,
            ut.referral ,
            ut.create_date ,
            ut.create_by ,
            ut.last_modified_date ,
            ut.last_modified_by ,
            ut.enabled
        FROM
            minlia_user ut
    </sql>

    <sql id="QUERY_CONDITION">
        <where>
            <if test="id != null">
                AND id = #{id,jdbcType=BIGINT}
            </if>
            <if test="guid != null">
                AND guid = #{guid}
            </if>
            <if test="username != null">
                AND username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="cellphone != null">
                AND cellphone = #{cellphone,jdbcType=VARCHAR}
            </if>
            <if test="email != null">
                AND email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="referral != null">
                AND referral = #{referral,jdbcType=VARCHAR}
            </if>
            <if test="locked != null">
                AND locked = #{locked,jdbcType=TINYINT}
            </if>
            <if test="enabled != null">
                AND enabled = #{enabled,jdbcType=TINYINT}
            </if>
        </where>
    </sql>

    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO minlia_user(
            guid ,
            username ,
            cellphone ,
            email ,
            password ,
            default_role ,
            referral
        )
        VALUES(
            #{guid,jdbcType=VARCHAR},
            #{username,jdbcType=VARCHAR},
            #{cellphone,jdbcType=VARCHAR},
            #{email,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR},
            #{defaultRole,jdbcType=VARCHAR},
            #{referral,jdbcType=VARCHAR}
        )
    </insert>

    <update id="update" parameterType="com.minlia.modules.rbac.backend.user.entity.User">
        UPDATE minlia_user
        SET
        <if test="enabled != null">
            enabled = #{enabled,jdbcType=TINYINT} ,
        </if>
        <if test="username != null">
            username = #{username,jdbcType=VARCHAR} ,
        </if>
        <if test="password != null">
            password = #{password,jdbcType=VARCHAR} ,
        </if>
        <if test="defaultRole != null">
            default_role = #{defaultRole,jdbcType=VARCHAR} ,
        </if>
        <if test="locked != null">
            locked = #{locked,jdbcType=TINYINT} ,
        </if>
        <if test="lockTime != null">
            lock_time = #{lockTime,jdbcType=TIMESTAMP} ,
        </if>
        <if test="lockLimit != null">
            lock_limit = #{lockLimit,jdbcType=TINYINT} ,
        </if>
        <if test="lastLoginTime != null">
            last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP} ,
        </if>
        <if test="lastLoginIp != null">
            last_login_ip = #{lastLoginIp,jdbcType=VARCHAR} ,
        </if>
        last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP}
        WHERE guid = #{guid,jdbcType=VARCHAR}
    </update>

    <delete id="delete">
        DELETE FROM map_user_role WHERE user_id = #{id};
        DELETE FROM minlia_user WHERE id = #{id};
    </delete>

    <update id="grant">
        DELETE FROM map_user_role where user_id = #{arg0};

        INSERT INTO map_user_role(
        user_id ,
        role_id
        )
        VALUES
        <foreach collection="arg1" item="item" index="index" separator=",">
            (
            #{arg0,jdbcType=BIGINT} ,
            #{item,jdbcType=SMALLINT}
            )
        </foreach>
        ;
    </update>

    <select id="queryByUsernameOrCellphoneOrEmail" resultType="com.minlia.modules.rbac.backend.user.entity.User">
        <include refid="QUERY_CONTENT"/>
        WHERE ut.guid = #{arg0} OR ut.username = #{arg0} OR ut.cellphone = #{arg0} OR email = #{arg0}
    </select>

    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) FROM minlia_user ut
        <include refid="QUERY_CONDITION"/>
    </select>

    <select id="queryOne" resultType="com.minlia.modules.rbac.backend.user.entity.User">
        <include refid="QUERY_CONTENT"/>
        <include refid="QUERY_CONDITION"/>
    </select>

    <select id="queryList" resultType="com.minlia.modules.rbac.backend.user.entity.User">
        <include refid="QUERY_CONTENT"/>
        <include refid="QUERY_CONDITION"/>
    </select>

</mapper>